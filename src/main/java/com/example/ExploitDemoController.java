package com.example;
import java.util.Base64;
import com.zaxxer.nuprocess.*;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.springframework.web.bind.annotation.*;

@RestController
public class ExploitDemoController {

    @PostMapping("/execute")
    public String executeInput(@RequestBody String input) {
        try {
            String decoded_input = new String(Base64.getDecoder().decode(input));
            // Build a command to echo the input
            // System.out.println("Received input: " + input);
            String command = String.format("echo %s", decoded_input);
            // System.out.println("Executing command: " + command);
            // Use NuProcess to execute the command
            NuProcessBuilder pb = new NuProcessBuilder(Arrays.asList("/bin/bash", "-c", command, "-d"));
            ProcessHandler handler = new ProcessHandler();
            pb.setProcessListener(handler);
            pb.start();
            return "Server response: " + removeAfterNullByte(decoded_input);
        } catch (Exception e) {
            return "Error: " + e.getMessage();
        }
    }
    public static String removeAfterNullByte(String input) {
        // Find the index of the null byte
        int nullByteIndex = input.indexOf('\0');

        // If there's no null byte, return the original string
        if (nullByteIndex == -1) {
            return input;
        }

        // Otherwise, return the substring before the null byte
        return input.substring(0, nullByteIndex);
    }
}
